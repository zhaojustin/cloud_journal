[{"/Users/justinzhao/Documents/GitHub/cloud_journal/src/index.js":"1","/Users/justinzhao/Documents/GitHub/cloud_journal/src/App.js":"2","/Users/justinzhao/Documents/GitHub/cloud_journal/src/reportWebVitals.js":"3","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Heading/Heading.js":"4","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Daily/DailyCard.js":"5","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/BobaTracker/BobaTrackerCard.js":"6","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/CoffeeTracker/CoffeeTrackerCard.js":"7","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/DatePicker/DatePicker.js":"8","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js":"9","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Daily/SubmitButton.js":"10"},{"size":500,"mtime":1642462047722,"results":"11","hashOfConfig":"12"},{"size":1222,"mtime":1642567429276,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1641876843355,"results":"14","hashOfConfig":"12"},{"size":475,"mtime":1642292860051,"results":"15","hashOfConfig":"12"},{"size":5595,"mtime":1642562847793,"results":"16","hashOfConfig":"12"},{"size":4496,"mtime":1642375740026,"results":"17","hashOfConfig":"12"},{"size":5237,"mtime":1642546765873,"results":"18","hashOfConfig":"12"},{"size":924,"mtime":1642298745285,"results":"19","hashOfConfig":"12"},{"size":1435,"mtime":1642546041817,"results":"20","hashOfConfig":"12"},{"size":362,"mtime":1642547700191,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c0xjxj",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/justinzhao/Documents/GitHub/cloud_journal/src/index.js",[],["44","45"],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/App.js",[],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/reportWebVitals.js",[],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Heading/Heading.js",[],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Daily/DailyCard.js",["46"],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/BobaTracker/BobaTrackerCard.js",["47"],"import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Form,\n  FormGroup,\n  FormInput,\n  Button,\n} from \"shards-react\";\n\nclass BobaTrackerCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lastDrank: null,\n      count: null,\n      cost: null,\n      newEntry: {\n        drink: \"\",\n        extras: \"\",\n        price: \"\",\n        store: \"\",\n      },\n    };\n  }\n\n  changeHandler = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      newEntry: {\n        ...this.state.newEntry,\n        [name]: value,\n      },\n    });\n  };\n\n  submitForm = () => {\n    console.log(this.state.newEntry);\n  };\n\n  render() {\n    return (\n      <Card style={{ maxWidth: \"450px\" }}>\n        <CardHeader>\n          <h1>&#129483; Boba</h1>\n        </CardHeader>\n        <CardBody style={{ paddingTop: \"0\", paddingBottom: \"0\" }}>\n          <Container className=\"internalBlock\">\n            <Row className=\"internalBlockSection\">\n              <Col>\n                <h4>Current data:</h4>\n                <p>\n                  Cost:{\" \"}\n                  <span className=\"data\">{this.state.cost || \"$xx.xx\"}</span>\n                </p>\n                <p>\n                  Count:{\" \"}\n                  <span className=\"data\">{this.state.count || \"x cups\"}</span>{\" \"}\n                </p>\n                <p>\n                  Last Drank:{\" \"}\n                  <span className=\"data\">\n                    {this.state.lastDrank || \"mm-dd-yyyy\"}\n                  </span>\n                </p>\n              </Col>\n            </Row>\n            <Row className=\"internalBlockSection\">\n              <Col>\n                <h4>New entry:</h4>\n                <Form>\n                  <FormGroup>\n                    {/* Store Name */}\n                    <label htmlFor=\"store\">\n                      <p>Store</p>\n                    </label>\n                    <FormInput\n                      value={this.state.newEntry.store}\n                      name=\"store\"\n                      type=\"text\"\n                      onChange={this.changeHandler}\n                      id=\"#store\"\n                      placeholder=\"e.g. Omomo\"\n                    />\n\n                    {/* Drink Name */}\n                    <label htmlFor=\"drink\">\n                      <p>Drink</p>\n                    </label>\n                    <FormInput\n                      value={this.state.newEntry.drink}\n                      name=\"drink\"\n                      type=\"text\"\n                      onChange={this.changeHandler}\n                      id=\"#drink\"\n                      placeholder=\"e.g. Jasmine Milk Tea\"\n                    />\n\n                    {/* Toppings */}\n                    <label htmlFor=\"toppings\">\n                      <p>Toppings</p>\n                    </label>\n                    <FormInput\n                      value={this.state.newEntry.extras}\n                      name=\"extras\"\n                      type=\"text\"\n                      onChange={this.changeHandler}\n                      id=\"#toppings\"\n                      placeholder=\"e.g. Boba\"\n                    />\n\n                    {/* Price */}\n                    <label htmlFor=\"price\">\n                      <p>Price</p>\n                    </label>\n                    <InputGroup id=\"#price\" className=\"mb-2\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>$</InputGroupText>\n                      </InputGroupAddon>\n                      <FormInput\n                        number=\"true\"\n                        value={this.state.newEntry.price}\n                        name=\"price\"\n                        type=\"number\"\n                        onChange={this.changeHandler}\n                        placeholder=\"xx.xx\"\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </CardBody>\n        <CardFooter>\n          <Container>\n            <Row>\n              <Col>\n                <Button onClick={this.submitForm} theme=\"dark\">\n                  <p>&#128640; Submit</p>\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nexport default BobaTrackerCard;\n","/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/CoffeeTracker/CoffeeTrackerCard.js",[],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/DatePicker/DatePicker.js",[],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js",["48","49"],"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Daily/SubmitButton.js",["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":8,"column":3,"nodeType":"58","messageId":"59","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":8,"column":3,"nodeType":"58","messageId":"59","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":48,"column":30,"nodeType":"63","messageId":"64","endLine":48,"endColumn":32},{"ruleId":"56","severity":1,"message":"65","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":6,"column":3,"nodeType":"68","messageId":"69","endLine":8,"endColumn":4},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'CardTitle' is defined but never used.","Identifier","unusedVar","'last' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Airtable' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]