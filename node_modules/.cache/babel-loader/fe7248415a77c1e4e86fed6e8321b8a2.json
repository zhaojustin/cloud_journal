{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js\";\nimport React from \"react\";\nimport Airtable from \"airtable\";\nimport { last } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      date: \"Loading...\"\n    };\n  }\n\n  async componentDidMount() {\n    var lastUpdatedDate = undefined;\n    var base = await new Airtable({\n      apiKey: API_KEY\n    }).base(BASE_ID);\n    await base(\"Dailys\").select({\n      view: \"Grid view\",\n      sort: [{\n        field: \"date\",\n        direction: \"desc\"\n      }]\n    }).eachPage(function page(records, next) {\n      try {\n        console.log(records[0].fields.date);\n        lastUpdatedDate = records[0].fields.date;\n        console.log(\"retrieved: \" + lastUpdatedDate);\n        this.setState({\n          date: lastUpdatedDate\n        });\n        console.log(\"date is set to \" + lastUpdatedDate);\n        next();\n      } catch {\n        return;\n      }\n    }, function (err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n\n    (async () => {\n      console.log(\"waiting for variable\");\n\n      while (lastUpdatedDate == undefined) // define the condition as you like\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      console.log(\"variable is defined\");\n    })();\n\n    console.log(\"above code doesn't block main function stack\");\n    this.setState({\n      date: lastUpdatedDate\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LastUpdated;","map":{"version":3,"sources":["/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js"],"names":["React","Airtable","last","API_KEY","process","env","REACT_APP_API_KEY","BASE_ID","LastUpdated","Component","constructor","state","date","componentDidMount","lastUpdatedDate","undefined","base","apiKey","select","view","sort","field","direction","eachPage","page","records","next","console","log","fields","setState","err","error","Promise","resolve","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,MAAMC,OAAO,GAAG,mBAAhB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,eAAe,GAAGC,SAAtB;AACA,QAAIC,IAAI,GAAG,MAAM,IAAIf,QAAJ,CAAa;AAAEgB,MAAAA,MAAM,EAAEd;AAAV,KAAb,EAAkCa,IAAlC,CAAuCT,OAAvC,CAAjB;AAEA,UAAMS,IAAI,CAAC,QAAD,CAAJ,CACHE,MADG,CACI;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAD;AAFA,KADJ,EAKHC,QALG,CAMF,SAASC,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC3B,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBjB,IAA9B;AACAE,QAAAA,eAAe,GAAGW,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBjB,IAApC;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBd,eAA5B;AACA,aAAKgB,QAAL,CAAc;AACZlB,UAAAA,IAAI,EAAEE;AADM,SAAd;AAGAa,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBd,eAAhC;AACAY,QAAAA,IAAI;AACL,OATD,CASE,MAAM;AACN;AACD;AACF,KAnBC,EAoBF,UAAUK,GAAV,EAAe;AACb,UAAIA,GAAJ,EAAS;AACPJ,QAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACA;AACD;AACF,KAzBC,CAAN;;AA2BA,KAAC,YAAY;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAOd,eAAe,IAAIC,SAA1B,EACE;AACA,YAAM,IAAIkB,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,CAAN;;AACFP,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAND;;AAOAD,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AAEA,SAAKE,QAAL,CAAc;AACZlB,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAI,KAAKzB,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA7DuC;;AAgE1C,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport Airtable from \"airtable\";\nimport { last } from \"lodash\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      date: \"Loading...\",\n    };\n  }\n\n  async componentDidMount() {\n    var lastUpdatedDate = undefined;\n    var base = await new Airtable({ apiKey: API_KEY }).base(BASE_ID);\n\n    await base(\"Dailys\")\n      .select({\n        view: \"Grid view\",\n        sort: [{ field: \"date\", direction: \"desc\" }],\n      })\n      .eachPage(\n        function page(records, next) {\n          try {\n            console.log(records[0].fields.date);\n            lastUpdatedDate = records[0].fields.date;\n            console.log(\"retrieved: \" + lastUpdatedDate);\n            this.setState({\n              date: lastUpdatedDate,\n            });\n            console.log(\"date is set to \" + lastUpdatedDate);\n            next();\n          } catch {\n            return;\n          }\n        },\n        function (err) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n        }\n      );\n    (async () => {\n      console.log(\"waiting for variable\");\n      while (lastUpdatedDate == undefined)\n        // define the condition as you like\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      console.log(\"variable is defined\");\n    })();\n    console.log(\"above code doesn't block main function stack\");\n\n    this.setState({\n      date: lastUpdatedDate,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.date}</p>\n        <p>hi</p>\n      </div>\n    );\n  }\n}\n\nexport default LastUpdated;\n"]},"metadata":{},"sourceType":"module"}