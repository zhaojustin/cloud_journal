{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paramValidators = void 0;\n\nvar typecheck_1 = __importDefault(require(\"./typecheck\"));\n\nvar isString_1 = __importDefault(require(\"lodash/isString\"));\n\nvar isNumber_1 = __importDefault(require(\"lodash/isNumber\"));\n\nvar isPlainObject_1 = __importDefault(require(\"lodash/isPlainObject\"));\n\nexports.paramValidators = {\n  fields: typecheck_1.default(typecheck_1.default.isArrayOf(isString_1.default), 'the value for `fields` should be an array of strings'),\n  filterByFormula: typecheck_1.default(isString_1.default, 'the value for `filterByFormula` should be a string'),\n  maxRecords: typecheck_1.default(isNumber_1.default, 'the value for `maxRecords` should be a number'),\n  pageSize: typecheck_1.default(isNumber_1.default, 'the value for `pageSize` should be a number'),\n  offset: typecheck_1.default(isNumber_1.default, 'the value for `offset` should be a number'),\n  sort: typecheck_1.default(typecheck_1.default.isArrayOf(function (obj) {\n    return isPlainObject_1.default(obj) && isString_1.default(obj.field) && (obj.direction === void 0 || ['asc', 'desc'].includes(obj.direction));\n  }), 'the value for `sort` should be an array of sort objects. ' + 'Each sort object must have a string `field` value, and an optional ' + '`direction` value that is \"asc\" or \"desc\".'),\n  view: typecheck_1.default(isString_1.default, 'the value for `view` should be a string'),\n  cellFormat: typecheck_1.default(function (cellFormat) {\n    return isString_1.default(cellFormat) && ['json', 'string'].includes(cellFormat);\n  }, 'the value for `cellFormat` should be \"json\" or \"string\"'),\n  timeZone: typecheck_1.default(isString_1.default, 'the value for `timeZone` should be a string'),\n  userLocale: typecheck_1.default(isString_1.default, 'the value for `userLocale` should be a string')\n};","map":{"version":3,"sources":["../src/query_params.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,eAAA,GAAkB;AAC3B,EAAA,MAAM,EAAE,WAAA,CAAA,OAAA,CACJ,WAAA,CAAA,OAAA,CAAM,SAAN,CAAgB,UAAA,CAAA,OAAhB,CADI,EAEJ,sDAFI,CADmB;AAM3B,EAAA,eAAe,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,oDAAhB,CANU;AAQ3B,EAAA,UAAU,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,+CAAhB,CARe;AAU3B,EAAA,QAAQ,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,6CAAhB,CAViB;AAY3B,EAAA,MAAM,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,2CAAhB,CAZmB;AAc3B,EAAA,IAAI,EAAE,WAAA,CAAA,OAAA,CACF,WAAA,CAAA,OAAA,CAAM,SAAN,CAAgB,UAAC,GAAD,EAAI;AAChB,WACI,eAAA,CAAA,OAAA,CAAc,GAAd,KACA,UAAA,CAAA,OAAA,CAAS,GAAG,CAAC,KAAb,CADA,KAEC,GAAG,CAAC,SAAJ,KAAkB,KAAK,CAAvB,IAA4B,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAAyB,GAAG,CAAC,SAA7B,CAF7B,CADJ;AAKH,GAND,CADE,EAQF,8DACI,qEADJ,GAEI,4CAVF,CAdqB;AA2B3B,EAAA,IAAI,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,yCAAhB,CA3BqB;AA6B3B,EAAA,UAAU,EAAE,WAAA,CAAA,OAAA,CAAM,UAAC,UAAD,EAAW;AACzB,WAAO,UAAA,CAAA,OAAA,CAAS,UAAT,KAAwB,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAA4B,UAA5B,CAA/B;AACH,GAFW,EAET,yDAFS,CA7Be;AAiC3B,EAAA,QAAQ,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,6CAAhB,CAjCiB;AAmC3B,EAAA,UAAU,EAAE,WAAA,CAAA,OAAA,CAAM,UAAA,CAAA,OAAN,EAAgB,+CAAhB;AAnCe,CAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paramValidators = void 0;\nvar typecheck_1 = __importDefault(require(\"./typecheck\"));\nvar isString_1 = __importDefault(require(\"lodash/isString\"));\nvar isNumber_1 = __importDefault(require(\"lodash/isNumber\"));\nvar isPlainObject_1 = __importDefault(require(\"lodash/isPlainObject\"));\nexports.paramValidators = {\n    fields: typecheck_1.default(typecheck_1.default.isArrayOf(isString_1.default), 'the value for `fields` should be an array of strings'),\n    filterByFormula: typecheck_1.default(isString_1.default, 'the value for `filterByFormula` should be a string'),\n    maxRecords: typecheck_1.default(isNumber_1.default, 'the value for `maxRecords` should be a number'),\n    pageSize: typecheck_1.default(isNumber_1.default, 'the value for `pageSize` should be a number'),\n    offset: typecheck_1.default(isNumber_1.default, 'the value for `offset` should be a number'),\n    sort: typecheck_1.default(typecheck_1.default.isArrayOf(function (obj) {\n        return (isPlainObject_1.default(obj) &&\n            isString_1.default(obj.field) &&\n            (obj.direction === void 0 || ['asc', 'desc'].includes(obj.direction)));\n    }), 'the value for `sort` should be an array of sort objects. ' +\n        'Each sort object must have a string `field` value, and an optional ' +\n        '`direction` value that is \"asc\" or \"desc\".'),\n    view: typecheck_1.default(isString_1.default, 'the value for `view` should be a string'),\n    cellFormat: typecheck_1.default(function (cellFormat) {\n        return isString_1.default(cellFormat) && ['json', 'string'].includes(cellFormat);\n    }, 'the value for `cellFormat` should be \"json\" or \"string\"'),\n    timeZone: typecheck_1.default(isString_1.default, 'the value for `timeZone` should be a string'),\n    userLocale: typecheck_1.default(isString_1.default, 'the value for `userLocale` should be a string'),\n};\n"]},"metadata":{},"sourceType":"script"}