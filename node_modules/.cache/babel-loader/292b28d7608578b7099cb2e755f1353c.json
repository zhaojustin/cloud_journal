{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js\";\nimport React from \"react\";\nimport Airtable from \"airtable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      date: \"Loading...\"\n    };\n  }\n\n  async componentDidMount() {\n    var base = new Airtable({\n      apiKey: API_KEY\n    }).base(BASE_ID);\n    base(\"Dailys\").select({\n      view: \"Grid view\",\n      sort: [{\n        field: \"date\",\n        direction: \"desc\"\n      }]\n    }).eachPage(function page(records, next) {\n      try {\n        console.log(records[0].fields.date);\n        var lastUpdatedDate = records[0].fields.date;\n        console.log(lastUpdatedDate);\n        this.setState({\n          date: lastUpdatedDate\n        });\n        next();\n      } catch {\n        return;\n      }\n    }, function (err) {\n      if (err) {\n        console.error(err);\n        rej(err.statusCode);\n        return;\n      }\n\n      acpt(ToReturn);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LastUpdated;","map":{"version":3,"sources":["/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js"],"names":["React","Airtable","API_KEY","process","env","REACT_APP_API_KEY","BASE_ID","LastUpdated","Component","constructor","state","date","componentDidMount","base","apiKey","select","view","sort","field","direction","eachPage","page","records","next","console","log","fields","lastUpdatedDate","setState","err","error","rej","statusCode","acpt","ToReturn","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,MAAMC,OAAO,GAAG,mBAAhB;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,IAAI,GAAG,IAAIZ,QAAJ,CAAa;AAAEa,MAAAA,MAAM,EAAEZ;AAAV,KAAb,EAAkCW,IAAlC,CAAuCP,OAAvC,CAAX;AAEAO,IAAAA,IAAI,CAAC,QAAD,CAAJ,CACGE,MADH,CACU;AACNC,MAAAA,IAAI,EAAE,WADA;AAENC,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAD;AAFA,KADV,EAKGC,QALH,CAMI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC3B,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBf,IAA9B;AACA,YAAIgB,eAAe,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBf,IAAxC;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ;AACA,aAAKC,QAAL,CAAc;AACZjB,UAAAA,IAAI,EAAEgB;AADM,SAAd;AAGAJ,QAAAA,IAAI;AACL,OARD,CAQE,MAAM;AACN;AACD;AACF,KAlBL,EAmBI,UAAUM,GAAV,EAAe;AACb,UAAIA,GAAJ,EAAS;AACPL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACAE,QAAAA,GAAG,CAACF,GAAG,CAACG,UAAL,CAAH;AACA;AACD;;AACDC,MAAAA,IAAI,CAACC,QAAD,CAAJ;AACD,KA1BL;AA4BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAI,KAAKzB,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAjDuC;;AAoD1C,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport Airtable from \"airtable\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      date: \"Loading...\",\n    };\n  }\n\n  async componentDidMount() {\n    var base = new Airtable({ apiKey: API_KEY }).base(BASE_ID);\n\n    base(\"Dailys\")\n      .select({\n        view: \"Grid view\",\n        sort: [{ field: \"date\", direction: \"desc\" }],\n      })\n      .eachPage(\n        function page(records, next) {\n          try {\n            console.log(records[0].fields.date);\n            var lastUpdatedDate = records[0].fields.date;\n            console.log(lastUpdatedDate);\n            this.setState({\n              date: lastUpdatedDate,\n            });\n            next();\n          } catch {\n            return;\n          }\n        },\n        function (err) {\n          if (err) {\n            console.error(err);\n            rej(err.statusCode);\n            return;\n          }\n          acpt(ToReturn);\n        }\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.date}</p>\n        <p>hi</p>\n      </div>\n    );\n  }\n}\n\nexport default LastUpdated;\n"]},"metadata":{},"sourceType":"module"}