{"ast":null,"code":"var _jsxFileName = \"/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js\";\nimport React from \"react\";\nimport Airtable from \"airtable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nfunction getDate() {\n  var base = new Airtable({\n    apiKey: API_KEY\n  }).base(BASE_ID);\n  var lastUpdatedDate = undefined;\n  base(\"Dailys\").select({\n    view: \"Grid view\",\n    sort: [{\n      field: \"date\",\n      direction: \"desc\"\n    }]\n  }).eachPage(function page(records, next) {\n    try {\n      console.log(records[0].fields.date);\n      lastUpdatedDate = records[0].fields.date;\n      this.setState({\n        date: lastUpdatedDate\n      });\n      next();\n    } catch {\n      return;\n    }\n  }, function (err) {\n    if (err) {\n      console.error(err);\n      return;\n    }\n  });\n}\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      date: \"Loading...\"\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      setTimeout(resolve, 1000);\n    });\n    this.setState({\n      date: lastUpdatedDate\n    });\n    console.log(\"after timer: \" + this.state.date);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LastUpdated;","map":{"version":3,"sources":["/Users/justinzhao/Documents/GitHub/cloud_journal/src/components/Database/LastUpdated.js"],"names":["React","Airtable","API_KEY","process","env","REACT_APP_API_KEY","BASE_ID","getDate","base","apiKey","lastUpdatedDate","undefined","select","view","sort","field","direction","eachPage","page","records","next","console","log","fields","date","setState","err","error","LastUpdated","Component","constructor","state","componentDidMount","Promise","resolve","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,MAAMC,OAAO,GAAG,mBAAhB;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAIC,IAAI,GAAG,IAAIP,QAAJ,CAAa;AAAEQ,IAAAA,MAAM,EAAEP;AAAV,GAAb,EAAkCM,IAAlC,CAAuCF,OAAvC,CAAX;AACA,MAAII,eAAe,GAAGC,SAAtB;AAEAH,EAAAA,IAAI,CAAC,QAAD,CAAJ,CACGI,MADH,CACU;AACNC,IAAAA,IAAI,EAAE,WADA;AAENC,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAAD;AAFA,GADV,EAKGC,QALH,CAMI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC3B,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBC,IAA9B;AACAd,MAAAA,eAAe,GAAGS,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAX,CAAkBC,IAApC;AACA,WAAKC,QAAL,CAAc;AACZD,QAAAA,IAAI,EAAEd;AADM,OAAd;AAGAU,MAAAA,IAAI;AACL,KAPD,CAOE,MAAM;AACN;AACD;AACF,GAjBL,EAkBI,UAAUM,GAAV,EAAe;AACb,QAAIA,GAAJ,EAAS;AACPL,MAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACA;AACD;AACF,GAvBL;AAyBD;;AAED,MAAME,WAAN,SAA0B5B,KAAK,CAAC6B,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXP,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEsB,QAAjBQ,iBAAiB,GAAG;AACxB,UAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC7BC,MAAAA,UAAU,CAACD,OAAD,EAAU,IAAV,CAAV;AACD,KAFK,CAAN;AAGA,SAAKT,QAAL,CAAc;AACZD,MAAAA,IAAI,EAAEd;AADM,KAAd;AAGAW,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKS,KAAL,CAAWP,IAAzC;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAI,KAAKL,KAAL,CAAWP;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1BuC;;AA6B1C,eAAeI,WAAf","sourcesContent":["import React from \"react\";\nimport Airtable from \"airtable\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_ID = \"app27OZGEFr5eKnk4\";\n\nfunction getDate() {\n  var base = new Airtable({ apiKey: API_KEY }).base(BASE_ID);\n  var lastUpdatedDate = undefined;\n\n  base(\"Dailys\")\n    .select({\n      view: \"Grid view\",\n      sort: [{ field: \"date\", direction: \"desc\" }],\n    })\n    .eachPage(\n      function page(records, next) {\n        try {\n          console.log(records[0].fields.date);\n          lastUpdatedDate = records[0].fields.date;\n          this.setState({\n            date: lastUpdatedDate,\n          });\n          next();\n        } catch {\n          return;\n        }\n      },\n      function (err) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n      }\n    );\n}\n\nclass LastUpdated extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      date: \"Loading...\",\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise((resolve) => {\n      setTimeout(resolve, 1000);\n    });\n    this.setState({\n      date: lastUpdatedDate,\n    });\n    console.log(\"after timer: \" + this.state.date);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.date}</p>\n        <p>hi</p>\n      </div>\n    );\n  }\n}\n\nexport default LastUpdated;\n"]},"metadata":{},"sourceType":"module"}